import telebot
import requests
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã
load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–æ–≤
if not TELEGRAM_TOKEN:
    print("CRITICAL: TELEGRAM_TOKEN not found!")
    exit(1) # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ Telegram

if not OPENAI_API_KEY:
    print("WARNING: OPENAI_API_KEY not found! Transcription will fail.")
    # –ú–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å, –∑–∞–≤–µ—Ä—à–∞—Ç—å –ª–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ –Ω–µ—Ç, –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–∞ OpenAI

bot = telebot.TeleBot(TELEGRAM_TOKEN)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî *Kouch AI*\n"
        "–¢–≤–æ—è –º–∏–Ω–∏-–∫–æ–º–∞–Ω–¥–∞ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –≥–æ–ª–æ—Å–æ–º.\n\n"
        "üéô –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª ‚Äî –∏ —è —Ä–∞—Å—à–∏—Ñ—Ä—É—é –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç.\n"
        "üïí –û–±—ã—á–Ω–æ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω—å—à–µ 1 –º–∏–Ω—É—Ç—ã.\n\n"
        "‚ö†Ô∏è *–í–∞–∂–Ω–æ*: —Å–µ—Ä–≤–∏—Å –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –í—Å—ë, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –º–µ–∂–¥—É –Ω–∞–º–∏ ü§´"
    )
    try:
        bot.send_message(message.chat.id, welcome_text, parse_mode='Markdown')
    except Exception as e:
        print(f"Error sending welcome to {message.chat.id}: {e}") # –û—Å—Ç–∞–≤–ª—è–µ–º –ª–æ–≥ –æ—à–∏–±–∫–∏

@bot.message_handler(content_types=['voice', 'audio'])
def handle_audio(message):
    chat_id = message.chat.id
    file_id = None
    temp_filename = f"temp_{chat_id}_{message.message_id}.ogg"
    text = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ." # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    try:
        if message.voice:
            file_id = message.voice.file_id
        elif message.audio:
            file_id = message.audio.file_id

        if not file_id:
             bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è.")
             return

        if not OPENAI_API_KEY:
             bot.reply_to(message, "–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: API –∫–ª—é—á OpenAI –Ω–µ –Ω–∞–π–¥–µ–Ω.")
             return

        file_info = bot.get_file(file_id)
        file_content = bot.download_file(file_info.file_path)

        with open(temp_filename, "wb") as f:
            f.write(file_content)

        try:
            with open(temp_filename, "rb") as audio_file:
                response = requests.post(
                    "https://api.openai.com/v1/audio/transcriptions",
                    headers={"Authorization": f"Bearer {OPENAI_API_KEY}"},
                    files={"file": (temp_filename, audio_file)},
                    data={"model": "whisper-1"}
                )

            if response.status_code == 200:
                transcription_data = response.json()
                text = transcription_data.get("text", "ü§∑ –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å (–ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç).")
            else:
                # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                print(f"Whisper API Error {response.status_code}: {response.text}")
                text = f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ ({response.status_code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        except requests.exceptions.RequestException as req_err:
            print(f"Whisper network error: {req_err}")
            text = "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–∏—Å—É —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏."
        except Exception as whisper_err:
            print(f"Whisper processing error: {whisper_err}")
            text = "‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏."
        finally:
            if os.path.exists(temp_filename):
                os.remove(temp_filename)

    except Exception as e:
        print(f"General handle_audio error: {e}")
        # –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        text = "ü§∑ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∞—É–¥–∏–æ."

    try:
        bot.reply_to(message, text)
    except Exception as send_err:
        print(f"Error replying to user {chat_id}: {send_err}")

# ----- –ó–ê–ü–£–°–ö –ë–û–¢–ê -----
print("‚úÖ Kouch AI Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç polling...")
try:
    # None_stop=True –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ—à–∏–±–∫–∞—Ö —Å–µ—Ç–∏
    # skip_pending=True –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–µ
    bot.infinity_polling(timeout=60, long_polling_timeout=30, none_stop=True, skip_pending=True)
except Exception as e:
    print(f"üî¥ CRITICAL POLLING ERROR (Bot stopped): {e}")
    exit(1) # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ polling —É–ø–∞–ª
